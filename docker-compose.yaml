version: '3.8'
services:
  db_crawling:
    container_name: db_crawling
    build:
      context: ./mysql
      dockerfile: dockerfile
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/testdb.sql:/docker-entrypoint-initdb.d/testdb.sql  # 덤프 파일 복사
    healthcheck:
      test: [ 'CMD-SHELL', 'mysqladmin ping -h db_crawling -u root --password=$$MYSQL_ROOT_PASSWORD' ]
      interval: 10s
      timeout: 2s
      retries: 100
    networks:
      - app-tier

  db_itbook:
    container_name: db_itbook
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: itbook
    ports:
      - "3307:3306"  # Using a different host port to avoid conflict
    healthcheck:
      test: [ 'CMD-SHELL', 'mysqladmin ping -h db_itbook -u root --password=$$MYSQL_ROOT_PASSWORD' ]
      interval: 10s
      timeout: 2s
      retries: 100
    networks:
      - app-tier

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db_itbook
      - DB_PORT=3306
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      db_itbook:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations && 
      python manage.py migrate && 
      python manage.py runserver 0.0.0.0:8000"
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge